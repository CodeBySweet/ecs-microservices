name: Application Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose an action"
        required: true
        default: deploy
        type: choice
        options:
          - deploy
          - destroy

permissions:
  id-token: write
  contents: read
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OIDC_ARN }}
          aws-region: "us-east-1"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Generate backend.tf
        run: |
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "ecs-deploy-app-shirin"
              key    = "app/terraform"
              region = "us-east-1"
              encrypt = true
            }
          }
          EOF

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Download image URI artifact
        uses: actions/download-artifact@v4
        with:
          name: image-uris

      - name: Read image URIs into env vars
        id: images
        run: |
          echo "auth_image=$(cat image-auth.txt)" >> $GITHUB_ENV
          echo "product_image=$(cat image-product.txt)" >> $GITHUB_ENV
          echo "user_image=$(cat image-user.txt)" >> $GITHUB_ENV

      - name: Terraform Apply
        if: github.event.inputs.action == 'deploy'
        run: |
          terraform apply \
            -var="image_auth=${{ env.auth_image }}" \
            -var="image_product=${{ env.product_image }}" \
            -var="image_user=${{ env.user_image }}" \
            -var-file="app.tfvars" \
            -auto-approve

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        run: |
          terraform destroy \
            -var="image_auth=${{ env.auth_image }}" \
            -var="image_product=${{ env.product_image }}" \
            -var="image_user=${{ env.user_image }}" \
            -var-file="app.tfvars" \
            -auto-approve
